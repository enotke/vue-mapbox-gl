{"version":3,"file":"bind-props.js","sources":["../../src/utils/bind-props.js"],"sourcesContent":["/**\n * Capitalize the first letter of a string\n *\n * @param  {String} string The string to capitalize\n * @return {String}        The capitalized string\n */\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Automatically set a mapbox element's props when the vue element props changes\n *\n * @param  {Vue}    vueElement    The Vue component in question\n * @param  {Mixed}  mapboxElement The Mapbox element bound to the component\n * @param  {Object} props         The component's props definition object\n * @return {void}\n */\nexport default function bindProps(vueElement, mapboxElement, props) {\n  Object.keys(vueElement.$props)\n    .filter((prop) => prop !== undefined)\n    .forEach((prop) => {\n      const setMethodName = prop === 'mapStyle' ? 'setStyle' : `set${capitalizeFirstLetter(prop)}`;\n\n      const methodExists = typeof mapboxElement[setMethodName] === 'function';\n      const propNeedsBinding = 'bind' in props[prop] ? props[prop].bind : true;\n\n      // Do nothin if `setMethodName` is not a function of `mapBoxElement`\n      // or if the props is not to be bounded\n      if (!methodExists || !propNeedsBinding) {\n        return;\n      }\n\n      // Set deep option to true if prop type is or can be Object\n      const { type } = props[prop];\n      const options = {\n        deep: type === Object || (Array.isArray(type) && type.includes(Object)),\n      };\n\n      vueElement.$watch(\n        prop,\n        (newValue) => {\n          mapboxElement[setMethodName](newValue);\n        },\n        options\n      );\n    });\n}\n"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","bindProps","vueElement","mapboxElement","props","Object","keys","$props","filter","prop","undefined","forEach","setMethodName","methodExists","propNeedsBinding","bind","type","options","deep","Array","isArray","includes","$watch","newValue"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAT,CAA+BC,MAA/B,EAAuC;AACrC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,aAA/B,EAA8CC,KAA9C,EAAqD;AAClEC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,UAAU,CAACK,MAAvB,EACGC,MADH,CACU,UAACC,IAAD;AAAA,WAAUA,IAAI,KAAKC,SAAnB;AAAA,GADV,EAEGC,OAFH,CAEW,UAACF,IAAD,EAAU;AACjB,QAAMG,aAAa,GAAGH,IAAI,KAAK,UAAT,GAAsB,UAAtB,gBAAyCb,qBAAqB,CAACa,IAAD,CAA9D,CAAtB;AAEA,QAAMI,YAAY,GAAG,OAAOV,aAAa,CAACS,aAAD,CAApB,KAAwC,UAA7D;AACA,QAAME,gBAAgB,GAAG,UAAUV,KAAK,CAACK,IAAD,CAAf,GAAwBL,KAAK,CAACK,IAAD,CAAL,CAAYM,IAApC,GAA2C,IAApE,CAJiB;AAOjB;;AACA,QAAI,CAACF,YAAD,IAAiB,CAACC,gBAAtB,EAAwC;AACtC;AACD,KAVgB;;;AAajB,QAAQE,IAAR,GAAiBZ,KAAK,CAACK,IAAD,CAAtB,CAAQO,IAAR;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAEF,IAAI,KAAKX,MAAT,IAAoBc,KAAK,CAACC,OAAN,CAAcJ,IAAd,KAAuBA,IAAI,CAACK,QAAL,CAAchB,MAAd;AADnC,KAAhB;AAIAH,IAAAA,UAAU,CAACoB,MAAX,CACEb,IADF,EAEE,UAACc,QAAD,EAAc;AACZpB,MAAAA,aAAa,CAACS,aAAD,CAAb,CAA6BW,QAA7B;AACD,KAJH,EAKEN,OALF;AAOD,GA3BH;AA4BD;;;;"}